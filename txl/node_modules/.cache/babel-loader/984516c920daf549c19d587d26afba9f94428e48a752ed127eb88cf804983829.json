{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      contacts: [],\n      // 存储联系人数据\n      filteredContacts: [],\n      // 存储筛选后的联系人数据\n      searchQuery: '',\n      // 查询关键词\n      dialogVisible: false,\n      // 控制弹窗显示\n      contactForm: {\n        // 联系人表单\n        id: null,\n        name: '',\n        phone: '',\n        email: '',\n        address: '',\n        photo: '' // 照片URL\n      },\n      isEditing: false // 标识当前是添加还是编辑状态\n    };\n  },\n  created() {\n    this.fetchContacts();\n  },\n  methods: {\n    // 获取联系人列表\n    fetchContacts() {\n      axios.get('/api/contacts').then(response => {\n        this.contacts = response.data;\n        this.filteredContacts = response.data; // 初始化筛选结果\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    // 显示添加联系人弹窗\n    showAddDialog() {\n      this.isEditing = false;\n      this.contactForm = {\n        id: null,\n        name: '',\n        phone: '',\n        email: '',\n        address: '',\n        photo: ''\n      };\n      this.dialogVisible = true;\n    },\n    // 编辑联系人\n    editContact(contact) {\n      this.isEditing = true;\n      this.contactForm = {\n        ...contact\n      };\n      this.dialogVisible = true;\n    },\n    // 提交表单\n    submitForm() {\n      if (this.isEditing) {\n        this.updateContact();\n      } else {\n        this.addContact();\n      }\n    },\n    // 添加联系人\n    addContact() {\n      axios.post('/api/contacts', this.contactForm).then(response => {\n        this.contacts.push(response.data);\n        this.filteredContacts.push(response.data);\n        this.dialogVisible = false;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    // 更新联系人\n    updateContact() {\n      axios.put(`/api/contacts/${this.contactForm.id}`, this.contactForm).then(() => {\n        const index = this.contacts.findIndex(c => c.id === this.contactForm.id);\n        this.$set(this.contacts, index, this.contactForm);\n        this.filterContacts(); // 更新后重新过滤\n        this.dialogVisible = false;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    // 删除联系人\n    deleteContact(id) {\n      axios.delete(`/api/contacts/${id}`).then(() => {\n        this.contacts = this.contacts.filter(c => c.id !== id);\n        this.filterContacts(); // 删除后重新过滤\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    // 过滤联系人\n    filterContacts() {\n      const query = this.searchQuery.toLowerCase();\n      this.filteredContacts = this.contacts.filter(contact => {\n        return contact.name.toLowerCase().includes(query) || contact.phone.includes(query) || contact.email.toLowerCase().includes(query) || contact.address.toLowerCase().includes(query);\n      });\n    },\n    // 上传成功处理\n    handleUploadSuccess(response, file) {\n      this.contactForm.photo = response.url; // 假设后端返回照片的URL\n    },\n    // 预览图片\n    handlePreview(file) {\n      window.open(file.url);\n    },\n    // 显示通讯录页面\n    showContactPage() {\n      console.log('显示通讯录页面');\n    }\n  }\n};","map":{"version":3,"names":["axios","data","contacts","filteredContacts","searchQuery","dialogVisible","contactForm","id","name","phone","email","address","photo","isEditing","created","fetchContacts","methods","get","then","response","catch","error","console","showAddDialog","editContact","contact","submitForm","updateContact","addContact","post","push","put","index","findIndex","c","$set","filterContacts","deleteContact","delete","filter","query","toLowerCase","includes","handleUploadSuccess","file","url","handlePreview","window","open","showContactPage","log"],"sources":["src/views/home.vue"],"sourcesContent":["<template>\r\n    <div id=\"app\">\r\n      <el-container style=\"height: 100vh;\">\r\n        <!-- 头栏 -->\r\n        <el-header height=\"60px\" class=\"header\">\r\n          <div class=\"header-title\">通讯录管理系统</div>\r\n        </el-header>\r\n  \r\n        <!-- 侧边栏和内容 -->\r\n        <el-container>\r\n          <!-- 侧边栏 -->\r\n          <el-aside width=\"200px\" class=\"sidebar\">\r\n            <el-menu default-active=\"1\" class=\"el-menu-vertical-demo\">\r\n              <el-menu-item index=\"1\" @click=\"showContactPage\">\r\n                <i class=\"el-icon-user\"></i>\r\n                <span>通讯录</span>\r\n              </el-menu-item>\r\n              <el-menu-item index=\"2\">\r\n                <i class=\"el-icon-setting\"></i>\r\n                <span>设置</span>\r\n              </el-menu-item>\r\n            </el-menu>\r\n          </el-aside>\r\n  \r\n          <!-- 内容 -->\r\n          <el-main>\r\n            <!-- 查询框 -->\r\n            <el-row :gutter=\"20\" class=\"search-row\">\r\n              <el-col :span=\"12\">\r\n                <el-input\r\n                  v-model=\"searchQuery\"\r\n                  placeholder=\"请输入姓名、电话、邮箱或地址进行搜索\"\r\n                  prefix-icon=\"el-icon-search\"\r\n                  @input=\"filterContacts\"\r\n                />\r\n              </el-col>\r\n              <el-col :span=\"12\" class=\"header-buttons\">\r\n                <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"showAddDialog\">添加联系人</el-button>\r\n              </el-col>\r\n            </el-row>\r\n  \r\n            <!-- 联系人表格 -->\r\n            <el-table :data=\"filteredContacts\" border stripe style=\"width: 100%; margin-top: 20px;\">\r\n              <el-table-column prop=\"name\" label=\"姓名\" width=\"150\"></el-table-column>\r\n              <el-table-column prop=\"phone\" label=\"电话\" width=\"150\"></el-table-column>\r\n              <el-table-column prop=\"email\" label=\"邮箱\" width=\"200\"></el-table-column>\r\n              <el-table-column prop=\"address\" label=\"地址\" width=\"250\"></el-table-column>\r\n              <el-table-column prop=\"photo\" label=\"照片\" width=\"100\">\r\n                <template slot-scope=\"scope\">\r\n                  <img v-if=\"scope.row.photo\" :src=\"scope.row.photo\" alt=\"照片\" style=\"width: 50px; height: 50px; object-fit: cover;\" />\r\n                  <span v-else>暂无照片</span>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"操作\" width=\"180\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button type=\"text\" size=\"small\" @click=\"editContact(scope.row)\">编辑</el-button>\r\n                  <el-button type=\"text\" size=\"small\" @click=\"deleteContact(scope.row.id)\">删除</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-main>\r\n        </el-container>\r\n      </el-container>\r\n  \r\n      <!-- 添加/编辑联系人对话框 -->\r\n      <el-dialog :visible.sync=\"dialogVisible\" title=\"联系人信息\" width=\"500px\" class=\"contact-dialog\">\r\n        <el-form :model=\"contactForm\" label-width=\"80px\" class=\"contact-form\">\r\n          <el-form-item label=\"姓名\">\r\n            <el-input v-model=\"contactForm.name\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"电话\">\r\n            <el-input v-model=\"contactForm.phone\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"邮箱\">\r\n            <el-input v-model=\"contactForm.email\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"地址\">\r\n            <el-input v-model=\"contactForm.address\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"照片\">\r\n            <el-upload\r\n              class=\"upload-demo\"\r\n              action=\"/api/upload\"\r\n              list-type=\"picture-card\"\r\n              :on-success=\"handleUploadSuccess\"\r\n              :on-preview=\"handlePreview\"\r\n            >\r\n              <img v-if=\"contactForm.photo\" :src=\"contactForm.photo\" class=\"avatar\">\r\n              <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n            </el-upload>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitForm\">确定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        contacts: [], // 存储联系人数据\r\n        filteredContacts: [], // 存储筛选后的联系人数据\r\n        searchQuery: '', // 查询关键词\r\n        dialogVisible: false, // 控制弹窗显示\r\n        contactForm: { // 联系人表单\r\n          id: null,\r\n          name: '',\r\n          phone: '',\r\n          email: '',\r\n          address: '',\r\n          photo: '' // 照片URL\r\n        },\r\n        isEditing: false // 标识当前是添加还是编辑状态\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchContacts();\r\n    },\r\n    methods: {\r\n      // 获取联系人列表\r\n      fetchContacts() {\r\n        axios.get('/api/contacts')\r\n          .then(response => {\r\n            this.contacts = response.data;\r\n            this.filteredContacts = response.data; // 初始化筛选结果\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n      },\r\n      // 显示添加联系人弹窗\r\n      showAddDialog() {\r\n        this.isEditing = false;\r\n        this.contactForm = { id: null, name: '', phone: '', email: '', address: '', photo: '' };\r\n        this.dialogVisible = true;\r\n      },\r\n      // 编辑联系人\r\n      editContact(contact) {\r\n        this.isEditing = true;\r\n        this.contactForm = { ...contact };\r\n        this.dialogVisible = true;\r\n      },\r\n      // 提交表单\r\n      submitForm() {\r\n        if (this.isEditing) {\r\n          this.updateContact();\r\n        } else {\r\n          this.addContact();\r\n        }\r\n      },\r\n      // 添加联系人\r\n      addContact() {\r\n        axios.post('/api/contacts', this.contactForm)\r\n          .then(response => {\r\n            this.contacts.push(response.data);\r\n            this.filteredContacts.push(response.data);\r\n            this.dialogVisible = false;\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n      },\r\n      // 更新联系人\r\n      updateContact() {\r\n        axios.put(`/api/contacts/${this.contactForm.id}`, this.contactForm)\r\n          .then(() => {\r\n            const index = this.contacts.findIndex(c => c.id === this.contactForm.id);\r\n            this.$set(this.contacts, index, this.contactForm);\r\n            this.filterContacts(); // 更新后重新过滤\r\n            this.dialogVisible = false;\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n      },\r\n      // 删除联系人\r\n      deleteContact(id) {\r\n        axios.delete(`/api/contacts/${id}`)\r\n          .then(() => {\r\n            this.contacts = this.contacts.filter(c => c.id !== id);\r\n            this.filterContacts(); // 删除后重新过滤\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n      },\r\n      // 过滤联系人\r\n      filterContacts() {\r\n        const query = this.searchQuery.toLowerCase();\r\n        this.filteredContacts = this.contacts.filter(contact => {\r\n          return (\r\n            contact.name.toLowerCase().includes(query) ||\r\n            contact.phone.includes(query) ||\r\n            contact.email.toLowerCase().includes(query) ||\r\n            contact.address.toLowerCase().includes(query)\r\n          );\r\n        });\r\n      },\r\n      // 上传成功处理\r\n      handleUploadSuccess(response, file) {\r\n        this.contactForm.photo = response.url; // 假设后端返回照片的URL\r\n      },\r\n      // 预览图片\r\n      handlePreview(file) {\r\n        window.open(file.url);\r\n      },\r\n      // 显示通讯录页面\r\n      showContactPage() {\r\n        console.log('显示通讯录页面');\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  html, body, #app {\r\n    height: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  \r\n  .header {\r\n    background-color: #409EFF;\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 20px;\r\n  }\r\n  \r\n  .header-title {\r\n    font-size: 20px;\r\n  }\r\n  \r\n  .sidebar {\r\n    background-color: #2d3a4b;\r\n    color: white;\r\n  }\r\n  \r\n  .search-row {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .header-buttons {\r\n    text-align: right;\r\n  }\r\n  \r\n  .el-table {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .contact-dialog {\r\n    padding-bottom: 0 !important;\r\n  }\r\n  \r\n  .contact-form {\r\n    max-height: 300px;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .dialog-footer {\r\n    text-align: right;\r\n  }\r\n  \r\n  .el-input {\r\n    width: 100%;\r\n  }\r\n  \r\n  .avatar {\r\n    width: 100px;\r\n    height: 100px;\r\n    object-fit: cover;\r\n  }\r\n  \r\n  .avatar-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}