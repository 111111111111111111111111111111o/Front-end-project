{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from '../utils/request';\nexport default {\n  data() {\n    return {\n      contacts: [],\n      filteredContacts: [],\n      searchQuery: '',\n      dialogVisible: false,\n      contactForm: {\n        id: null,\n        name: '',\n        phone: '',\n        email: '',\n        address: ''\n      },\n      isEditing: false\n    };\n  },\n  created() {\n    this.fetchContacts();\n  },\n  methods: {\n    fetchContacts() {\n      request.get('/user/selectAll').then(response => {\n        this.contacts = response.data;\n        this.filteredContacts = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    showAddDialog() {\n      this.isEditing = false;\n      this.contactForm = {\n        id: null,\n        name: '',\n        phone: '',\n        email: '',\n        address: ''\n      };\n      this.dialogVisible = true;\n    },\n    editContact(contact) {\n      this.isEditing = true;\n      this.contactForm = {\n        ...contact\n      };\n      this.dialogVisible = true;\n    },\n    submitForm() {\n      if (this.isEditing) {\n        this.updateContact();\n      } else {\n        this.addContact();\n      }\n    },\n    addContact() {\n      request.post('/user/add', this.contactForm).then(response => {\n        this.contacts.push(response.data);\n        this.filteredContacts.push(response.data);\n        this.dialogVisible = false;\n        this.$message({\n          message: '添加联系人成功',\n          type: 'success'\n        });\n      }).catch(error => {\n        console.error('Error adding contact:', error);\n      });\n    },\n    updateContact() {\n      request.put(`/user/update/${this.contactForm.id}`, this.contactForm).then(() => {\n        const index = this.contacts.findIndex(c => c.id === this.contactForm.id);\n        this.$set(this.contacts, index, this.contactForm);\n        this.filterContacts();\n        this.dialogVisible = false;\n        this.$message({\n          message: '更新联系人成功',\n          type: 'success'\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    deleteContact(id) {\n      this.$confirm('此操作将永久删除该联系人, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        request.delete(`/user/delete/${id}`).then(() => {\n          this.contacts = this.contacts.filter(c => c.id !== id);\n          this.filteredContacts = this.contacts;\n          this.$message({\n            type: 'success',\n            message: '删除联系人成功'\n          });\n        }).catch(error => {\n          console.error(error);\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    filterContacts() {\n      const query = this.searchQuery.toLowerCase();\n      if (query) {\n        this.filteredContacts = this.contacts.filter(contact => {\n          return contact.name && contact.name.toLowerCase().includes(query) || contact.phone && contact.phone.includes(query) || contact.email && contact.email.toLowerCase().includes(query) || contact.address && contact.address.toLowerCase().includes(query);\n        });\n      } else {\n        this.filteredContacts = [...this.contacts];\n      }\n    },\n    handleDropdownCommand(command) {\n      if (command === 'add') {\n        this.showAddDialog();\n      }\n      if (command === 'edit') {\n        this.editContact(this.contactForm);\n      }\n    }\n  }\n};","map":{"version":3,"names":["request","data","contacts","filteredContacts","searchQuery","dialogVisible","contactForm","id","name","phone","email","address","isEditing","created","fetchContacts","methods","get","then","response","catch","error","console","showAddDialog","editContact","contact","submitForm","updateContact","addContact","post","push","$message","message","type","put","index","findIndex","c","$set","filterContacts","deleteContact","$confirm","confirmButtonText","cancelButtonText","delete","filter","query","toLowerCase","includes","handleDropdownCommand","command"],"sources":["src/views/home.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\" class=\"app-container\">\r\n    <!-- 放大且圆角的搜索框 -->\r\n    <el-input\r\n      v-model=\"searchQuery\"\r\n      placeholder=\"请输入姓名、电话、邮箱或地址进行搜索\"\r\n      prefix-icon=\"el-icon-search\"\r\n      class=\"search-input\"\r\n      @input=\"filterContacts\"\r\n    >\r\n      <template #append>\r\n        <el-dropdown @command=\"handleDropdownCommand\">\r\n          <el-button type=\"text\">\r\n            显示联系人信息 <i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n          </el-button>\r\n          <el-dropdown-menu slot=\"dropdown\">\r\n            <el-dropdown-item @click.native=\"showAddDialog\">添加联系人</el-dropdown-item>\r\n            <el-dropdown-item v-if=\"isEditing\" @click.native=\"editContact(contactForm)\">编辑联系人</el-dropdown-item>\r\n          </el-dropdown-menu>\r\n        </el-dropdown>\r\n      </template>\r\n    </el-input>\r\n\r\n    <!-- 联系人表格 -->\r\n    <el-table :data=\"filteredContacts\" border stripe class=\"contact-table\" style=\"width: 100%;\">\r\n      <el-table-column prop=\"name\" label=\"姓名\" width=\"150\"></el-table-column>\r\n      <el-table-column prop=\"phone\" label=\"电话\" width=\"150\"></el-table-column>\r\n      <el-table-column prop=\"email\" label=\"邮箱\" width=\"200\"></el-table-column>\r\n      <el-table-column prop=\"address\" label=\"地址\" width=\"250\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"180\">\r\n        <template #default=\"scope\">\r\n          <el-button \r\n            class=\"edit-button\" \r\n            size=\"small\" \r\n            icon=\"el-icon-edit\" \r\n            @click=\"editContact(scope.row)\"\r\n          >编辑</el-button>\r\n          <el-button \r\n            class=\"delete-button\" \r\n            size=\"small\" \r\n            icon=\"el-icon-delete\" \r\n            @click=\"deleteContact(scope.row.id)\"\r\n          >删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 添加/编辑联系人对话框 -->\r\n    <el-dialog :visible.sync=\"dialogVisible\" title=\"联系人信息\" width=\"500px\" class=\"contact-dialog\">\r\n      <el-form :model=\"contactForm\" label-width=\"80px\" class=\"contact-form\">\r\n        <el-form-item label=\"姓名\">\r\n          <el-input v-model=\"contactForm.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\">\r\n          <el-input v-model=\"contactForm.phone\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\">\r\n          <el-input v-model=\"contactForm.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"地址\">\r\n          <el-input v-model=\"contactForm.address\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitForm\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from '../utils/request';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      contacts: [],\r\n      filteredContacts: [],\r\n      searchQuery: '',\r\n      dialogVisible: false,\r\n      contactForm: {\r\n        id: null,\r\n        name: '',\r\n        phone: '',\r\n        email: '',\r\n        address: ''\r\n      },\r\n      isEditing: false\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchContacts();\r\n  },\r\n  methods: {\r\n    fetchContacts() {\r\n      request.get('/user/selectAll')\r\n        .then(response => {\r\n          this.contacts = response.data;\r\n          this.filteredContacts = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    showAddDialog() {\r\n      this.isEditing = false;\r\n      this.contactForm = { id: null, name: '', phone: '', email: '', address: '' };\r\n      this.dialogVisible = true;\r\n    },\r\n    editContact(contact) {\r\n      this.isEditing = true;\r\n      this.contactForm = { ...contact };\r\n      this.dialogVisible = true;\r\n    },\r\n    submitForm() {\r\n      if (this.isEditing) {\r\n        this.updateContact();\r\n      } else {\r\n        this.addContact();\r\n      }\r\n    },\r\n    addContact() {\r\n      request.post('/user/add', this.contactForm)\r\n        .then(response => {\r\n          this.contacts.push(response.data);\r\n          this.filteredContacts.push(response.data);\r\n          this.dialogVisible = false;\r\n          this.$message({\r\n            message: '添加联系人成功',\r\n            type: 'success'\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.error('Error adding contact:', error);\r\n        });\r\n    },\r\n    updateContact() {\r\n      request.put(`/user/update/${this.contactForm.id}`, this.contactForm)\r\n        .then(() => {\r\n          const index = this.contacts.findIndex(c => c.id === this.contactForm.id);\r\n          this.$set(this.contacts, index, this.contactForm);\r\n          this.filterContacts();\r\n          this.dialogVisible = false;\r\n          this.$message({\r\n            message: '更新联系人成功',\r\n            type: 'success'\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    deleteContact(id) {\r\n      this.$confirm('此操作将永久删除该联系人, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        request.delete(`/user/delete/${id}`)\r\n          .then(() => {\r\n            this.contacts = this.contacts.filter(c => c.id !== id);\r\n            this.filteredContacts = this.contacts;\r\n            this.$message({\r\n              type: 'success',\r\n              message: '删除联系人成功'\r\n            });\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });\r\n      });\r\n    },\r\n    filterContacts() {\r\n      const query = this.searchQuery.toLowerCase();\r\n      if (query) {\r\n        this.filteredContacts = this.contacts.filter(contact => {\r\n          return (\r\n            (contact.name && contact.name.toLowerCase().includes(query)) ||\r\n            (contact.phone && contact.phone.includes(query)) ||\r\n            (contact.email && contact.email.toLowerCase().includes(query)) ||\r\n            (contact.address && contact.address.toLowerCase().includes(query))\r\n          );\r\n        });\r\n      } else {\r\n        this.filteredContacts = [...this.contacts];\r\n      }\r\n    },\r\n    handleDropdownCommand(command) {\r\n      if (command === 'add') {\r\n        this.showAddDialog();\r\n      }\r\n      if (command === 'edit') {\r\n        this.editContact(this.contactForm);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.app-container {\r\n  background-color: #f5f7fa;\r\n  padding: 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.search-input {\r\n  width: 80%;\r\n  border-radius: 20px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.contact-table {\r\n  max-height: 500px; /* 设置表格最大高度 */\r\n  overflow-y: auto; /* 启用垂直滚动条 */\r\n}\r\n\r\n.edit-button,\r\n.delete-button {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.edit-button:hover {\r\n  background-color: #409EFF;\r\n  transform: scale(1.05);\r\n  color: white;\r\n}\r\n\r\n.delete-button:hover {\r\n  background-color: #F56C6C;\r\n  transform: scale(1.05);\r\n  color: white;\r\n}\r\n\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n\r\n.dialog-footer .el-button {\r\n  border-radius: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}