{"ast":null,"code":"import request from '../utils/request';\nexport default {\n  data() {\n    return {\n      contacts: [],\n      filteredContacts: [],\n      searchQuery: '',\n      dialogVisible: false,\n      contactForm: {\n        id: null,\n        name: '',\n        phone: '',\n        email: '',\n        address: ''\n      },\n      currentPage: 1,\n      pageSize: 10,\n      tableHeight: 0,\n      selectedContacts: []\n    };\n  },\n  created() {\n    this.fetchContacts();\n    this.updateTableHeight();\n    window.addEventListener('resize', this.updateTableHeight);\n  },\n  computed: {\n    paginatedContacts() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = this.currentPage * this.pageSize;\n      return this.filteredContacts.slice(start, end);\n    }\n  },\n  methods: {\n    fetchContacts() {\n      request.get('/user/selectAll').then(response => {\n        this.contacts = response.data;\n        this.filteredContacts = response.data; // 初始化筛选结果\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    showAddDialog() {\n      this.contactForm = {\n        id: null,\n        name: '',\n        phone: '',\n        email: '',\n        address: ''\n      };\n      this.dialogVisible = true;\n    },\n    editContact(contact) {\n      this.contactForm = {\n        ...contact\n      };\n      this.dialogVisible = true;\n    },\n    submitForm() {\n      if (!this.contactForm.name) {\n        this.$message.error('姓名不能为空');\n        return;\n      }\n      this.dialogVisible ? this.updateContact() : this.addContact();\n    },\n    addContact() {\n      request.post('/user/add', this.contactForm).then(response => {\n        this.dialogVisible = false;\n        this.fetchContacts();\n        this.$message.success('添加联系人成功');\n      }).catch(error => {\n        console.error('Error adding contact:', error);\n      });\n    },\n    updateContact() {\n      request.put(`/user/update/${this.contactForm.id}`, this.contactForm).then(() => {\n        this.dialogVisible = false;\n        this.fetchContacts();\n        this.$message.success('更新联系人成功');\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    deleteContact(id) {\n      this.$confirm('此操作将永久删除该联系人, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        request.delete(`/user/delete/${id}`).then(() => {\n          this.fetchContacts();\n          this.$message.success('删除联系人成功');\n        }).catch(error => {\n          console.error(error);\n        });\n      }).catch(() => {\n        this.$message.info('已取消删除');\n      });\n    },\n    deleteSelectedContacts() {\n      const ids = this.selectedContacts.map(contact => contact.id);\n      this.$confirm('此操作将永久删除选中的联系人, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        request.delete('/user/batchDelete', {\n          data: {\n            ids\n          }\n        }).then(() => {\n          this.fetchContacts();\n          this.$message.success('批量删除成功');\n        }).catch(error => {\n          console.error(error);\n        });\n      }).catch(() => {\n        this.$message.info('已取消删除');\n      });\n    },\n    filterContacts() {\n      const query = this.searchQuery.toLowerCase();\n      this.filteredContacts = this.contacts.filter(contact => {\n        return (contact.name ? contact.name.toLowerCase() : '').includes(query) || (contact.phone ? contact.phone.toLowerCase() : '').includes(query) || (contact.email ? contact.email.toLowerCase() : '').includes(query) || (contact.address ? contact.address.toLowerCase() : '').includes(query);\n      });\n      this.currentPage = 1;\n    }\n  },\n  updateTableHeight() {\n    this.tableHeight = window.innerHeight - 250;\n  },\n  handlePageChange(page) {\n    this.currentPage = page;\n  },\n  handleSelectionChange(selected) {\n    this.selectedContacts = selected;\n  }\n};","map":{"version":3,"names":["request","data","contacts","filteredContacts","searchQuery","dialogVisible","contactForm","id","name","phone","email","address","currentPage","pageSize","tableHeight","selectedContacts","created","fetchContacts","updateTableHeight","window","addEventListener","computed","paginatedContacts","start","end","slice","methods","get","then","response","catch","error","console","showAddDialog","editContact","contact","submitForm","$message","updateContact","addContact","post","success","put","deleteContact","$confirm","confirmButtonText","cancelButtonText","type","delete","info","deleteSelectedContacts","ids","map","filterContacts","query","toLowerCase","filter","includes","innerHeight","handlePageChange","page","handleSelectionChange","selected"],"sources":["src/views/home.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <el-container style=\"height: 100vh;\">\r\n      <!-- 美化头部 -->\r\n      <el-header height=\"60px\" class=\"header\">\r\n        <div class=\"header-title\">\r\n          <i class=\"el-icon-phone-outline\"></i>\r\n          通讯录\r\n        </div>\r\n      </el-header>\r\n\r\n      <el-container>\r\n        <el-container>\r\n          <el-header height=\"auto\" class=\"search-header\">\r\n            <el-row :gutter=\"20\" class=\"search-row\" style=\"justify-content: space-between;\"> \r\n              <!-- 调整搜索框居中 -->\r\n              <el-col :span=\"14\" class=\"centered-search\">\r\n                <el-input\r\n                  v-model=\"searchQuery\"\r\n                  placeholder=\"请输入姓名、电话、邮箱或地址进行搜索\"\r\n                  prefix-icon=\"el-icon-search\"\r\n                  @input=\"filterContacts\"\r\n                  style=\"width: 100%;\"\r\n                />\r\n              </el-col>\r\n              <el-col :span=\"10\" class=\"header-buttons\" style=\"display: flex; justify-content: flex-end;\">\r\n                <el-button \r\n                  class=\"add-contact-button\"\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-plus\"\r\n                  @click=\"showAddDialog\"\r\n                  style=\"margin-right: 10px;\"\r\n                >添加联系人</el-button>\r\n                <el-button \r\n                  class=\"delete-contacts-button\"\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"deleteSelectedContacts\"\r\n                  :disabled=\"!selectedContacts.length\"\r\n                >批量删除</el-button>\r\n              </el-col>\r\n            </el-row>\r\n          </el-header>\r\n\r\n          <!-- 主表格布局，优化按钮排布 -->\r\n          <el-main style=\"padding: 20px; display: flex; justify-content: center;\">\r\n            <div style=\"width: 1037px;\">\r\n              <el-table :data=\"paginatedContacts\" border stripe style=\"width: 100%;\" :height=\"tableHeight\" @selection-change=\"handleSelectionChange\">\r\n                <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n                <el-table-column prop=\"name\" label=\"姓名\" width=\"150\"></el-table-column>\r\n                <el-table-column prop=\"phone\" label=\"电话\" width=\"180\"></el-table-column>\r\n                <el-table-column prop=\"email\" label=\"邮箱\" width=\"220\"></el-table-column>\r\n                <el-table-column prop=\"address\" label=\"地址\" width=\"250\"></el-table-column>\r\n                <el-table-column label=\"操作\" width=\"180\">\r\n                  <template #default=\"scope\">\r\n                    <el-button \r\n                      class=\"edit-button\" \r\n                      size=\"small\" \r\n                      icon=\"el-icon-edit\" \r\n                      @click=\"editContact(scope.row)\"\r\n                      style=\"margin-right: 5px;\"\r\n                    >编辑</el-button>\r\n                    <el-button \r\n                      class=\"delete-button\" \r\n                      size=\"small\" \r\n                      icon=\"el-icon-delete\" \r\n                      @click=\"deleteContact(scope.row.id)\"\r\n                    >删除</el-button>\r\n                  </template>\r\n                </el-table-column>\r\n              </el-table>\r\n            </div>\r\n\r\n            <!-- 分页居中 -->\r\n            <el-pagination\r\n              background\r\n              layout=\"prev, pager, next\"\r\n              :total=\"filteredContacts.length\"\r\n              :page-size=\"pageSize\"\r\n              :current-page.sync=\"currentPage\"\r\n              @current-change=\"handlePageChange\"\r\n              class=\"pagination\"\r\n            />\r\n          </el-main>\r\n        </el-container>\r\n      </el-container>\r\n    </el-container>\r\n\r\n    <!-- 弹出对话框 -->\r\n    <el-dialog :visible.sync=\"dialogVisible\" title=\"联系人信息\" width=\"500px\" class=\"contact-dialog\" :draggable=\"true\">\r\n      <el-form :model=\"contactForm\" label-width=\"80px\" class=\"contact-form\">\r\n        <el-form-item label=\"姓名\">\r\n          <el-input v-model=\"contactForm.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\">\r\n          <el-input v-model=\"contactForm.phone\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\">\r\n          <el-input v-model=\"contactForm.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"地址\">\r\n          <el-input v-model=\"contactForm.address\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\" style=\"text-align: center;\">\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitForm\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from '../utils/request';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      contacts: [],\r\n      filteredContacts: [],\r\n      searchQuery: '',\r\n      dialogVisible: false,\r\n      contactForm: {\r\n        id: null,\r\n        name: '',\r\n        phone: '',\r\n        email: '',\r\n        address: ''\r\n      },\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      tableHeight: 0,\r\n      selectedContacts: []\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchContacts();\r\n    this.updateTableHeight();\r\n    window.addEventListener('resize', this.updateTableHeight);\r\n  },\r\n  computed: {\r\n    paginatedContacts() {\r\n      const start = (this.currentPage - 1) * this.pageSize;\r\n      const end = this.currentPage * this.pageSize;\r\n      return this.filteredContacts.slice(start, end);\r\n    }\r\n  },\r\n  methods: {\r\n    fetchContacts() {\r\n      request.get('/user/selectAll')\r\n        .then(response => {\r\n          this.contacts = response.data;\r\n          this.filteredContacts = response.data; // 初始化筛选结果\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    showAddDialog() {\r\n      this.contactForm = { id: null, name: '', phone: '', email: '', address: '' };\r\n      this.dialogVisible = true;\r\n    },\r\n    editContact(contact) {\r\n      this.contactForm = { ...contact };\r\n      this.dialogVisible = true;\r\n    },\r\n    submitForm() {\r\n      if (!this.contactForm.name) {\r\n        this.$message.error('姓名不能为空');\r\n        return;\r\n      }\r\n      this.dialogVisible ? this.updateContact() : this.addContact();\r\n    },\r\n    addContact() {\r\n      request.post('/user/add', this.contactForm)\r\n        .then(response => {\r\n          this.dialogVisible = false;\r\n          this.fetchContacts();\r\n          this.$message.success('添加联系人成功');\r\n        })\r\n        .catch(error => {\r\n          console.error('Error adding contact:', error);\r\n        });\r\n    },\r\n    updateContact() {\r\n      request.put(`/user/update/${this.contactForm.id}`, this.contactForm)\r\n        .then(() => {\r\n          this.dialogVisible = false;\r\n          this.fetchContacts();\r\n          this.$message.success('更新联系人成功');\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    deleteContact(id) {\r\n      this.$confirm('此操作将永久删除该联系人, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        request.delete(`/user/delete/${id}`)\r\n          .then(() => {\r\n            this.fetchContacts();\r\n            this.$message.success('删除联系人成功');\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n      }).catch(() => {\r\n        this.$message.info('已取消删除');\r\n      });\r\n    },\r\n    deleteSelectedContacts() {\r\n      const ids = this.selectedContacts.map(contact => contact.id);\r\n      this.$confirm('此操作将永久删除选中的联系人, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        request.delete('/user/batchDelete', { data: { ids } })\r\n          .then(() => {\r\n            this.fetchContacts();\r\n            this.$message.success('批量删除成功');\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n      }).catch(() => {\r\n        this.$message.info('已取消删除');\r\n      });\r\n    },\r\n    filterContacts() {\r\n    const query = this.searchQuery.toLowerCase();\r\n    this.filteredContacts = this.contacts.filter(contact => {\r\n      return (\r\n        (contact.name ? contact.name.toLowerCase() : '').includes(query) ||\r\n        (contact.phone ? contact.phone.toLowerCase() : '').includes(query) ||\r\n        (contact.email ? contact.email.toLowerCase() : '').includes(query) ||\r\n        (contact.address ? contact.address.toLowerCase() : '').includes(query)\r\n      );\r\n    });\r\n    this.currentPage = 1; \r\n  }\r\n},\r\n    updateTableHeight() {\r\n      this.tableHeight = window.innerHeight - 250; \r\n    },\r\n    handlePageChange(page) {\r\n      this.currentPage = page;\r\n    },\r\n    handleSelectionChange(selected) {\r\n      this.selectedContacts = selected;\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n/* 美化头部 */\r\n.header {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 20px;\r\n}\r\n\r\n.header-title {\r\n  font-size: 24px;\r\n}\r\n\r\n/* 搜索框和按钮美化 */\r\n.search-header {\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.centered-search input {\r\n  border-radius: 30px;\r\n  padding: 10px 15px;\r\n}\r\n\r\n.add-contact-button {\r\n  background-color: #4CAF50;\r\n  border-color: #4CAF50;\r\n}\r\n\r\n.delete-contacts-button {\r\n  background-color: #FF5722;\r\n  border-color: #FF5722;\r\n}\r\n\r\n/* 表格美化 */\r\n.edit-button {\r\n  margin-right: 10px;\r\n}\r\n\r\n.el-table th {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.el-table .el-button {\r\n  padding: 8px;\r\n}\r\n\r\n/* 分页样式 */\r\n.pagination {\r\n  position: absolute;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n/* 统一按钮样式 */\r\n.el-button {\r\n  border-radius: 5px;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}