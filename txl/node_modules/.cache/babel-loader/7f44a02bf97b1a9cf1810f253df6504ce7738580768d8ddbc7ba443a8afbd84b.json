{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      contacts: [],\n      // 存储联系人数据\n      dialogVisible: false,\n      // 控制弹窗显示\n      contactForm: {\n        // 联系人表单\n        id: null,\n        name: '',\n        phone: ''\n      },\n      isEditing: false // 标识当前是添加还是编辑状态\n    };\n  },\n  created() {\n    this.fetchContacts();\n  },\n  methods: {\n    // 获取联系人列表\n    fetchContacts() {\n      axios.get('/api/contacts').then(response => {\n        this.contacts = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    // 显示添加联系人弹窗\n    showAddDialog() {\n      this.isEditing = false;\n      this.contactForm = {\n        id: null,\n        name: '',\n        phone: ''\n      };\n      this.dialogVisible = true;\n    },\n    // 编辑联系人\n    editContact(contact) {\n      this.isEditing = true;\n      this.contactForm = {\n        ...contact\n      };\n      this.dialogVisible = true;\n    },\n    // 提交表单\n    submitForm() {\n      if (this.isEditing) {\n        this.updateContact();\n      } else {\n        this.addContact();\n      }\n    },\n    // 添加联系人\n    addContact() {\n      axios.post('/api/contacts', this.contactForm).then(response => {\n        this.contacts.push(response.data);\n        this.dialogVisible = false;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    // 更新联系人\n    updateContact() {\n      axios.put(`/api/contacts/${this.contactForm.id}`, this.contactForm).then(() => {\n        const index = this.contacts.findIndex(c => c.id === this.contactForm.id);\n        this.$set(this.contacts, index, this.contactForm);\n        this.dialogVisible = false;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    // 删除联系人\n    deleteContact(id) {\n      axios.delete(`/api/contacts/${id}`).then(() => {\n        this.contacts = this.contacts.filter(c => c.id !== id);\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","contacts","dialogVisible","contactForm","id","name","phone","isEditing","created","fetchContacts","methods","get","then","response","catch","error","console","showAddDialog","editContact","contact","submitForm","updateContact","addContact","post","push","put","index","findIndex","c","$set","deleteContact","delete","filter"],"sources":["src/views/form.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-row>\r\n      <el-col :span=\"24\">\r\n        <el-button type=\"primary\" @click=\"showAddDialog\">添加联系人</el-button>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-table :data=\"contacts\" border style=\"width: 100%\">\r\n      <el-table-column prop=\"name\" label=\"姓名\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"phone\" label=\"电话\" width=\"180\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"180\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"text\" size=\"small\" @click=\"editContact(scope.row)\">编辑</el-button>\r\n          <el-button type=\"text\" size=\"small\" @click=\"deleteContact(scope.row.id)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 添加/编辑联系人对话框 -->\r\n    <el-dialog :visible.sync=\"dialogVisible\" title=\"联系人信息\">\r\n      <el-form :model=\"contactForm\">\r\n        <el-form-item label=\"姓名\">\r\n          <el-input v-model=\"contactForm.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\">\r\n          <el-input v-model=\"contactForm.phone\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitForm\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      contacts: [],  // 存储联系人数据\r\n      dialogVisible: false,  // 控制弹窗显示\r\n      contactForm: {  // 联系人表单\r\n        id: null,\r\n        name: '',\r\n        phone: ''\r\n      },\r\n      isEditing: false // 标识当前是添加还是编辑状态\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchContacts();\r\n  },\r\n  methods: {\r\n    // 获取联系人列表\r\n    fetchContacts() {\r\n      axios.get('/api/contacts')\r\n        .then(response => {\r\n          this.contacts = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    // 显示添加联系人弹窗\r\n    showAddDialog() {\r\n      this.isEditing = false;\r\n      this.contactForm = { id: null, name: '', phone: '' };\r\n      this.dialogVisible = true;\r\n    },\r\n    // 编辑联系人\r\n    editContact(contact) {\r\n      this.isEditing = true;\r\n      this.contactForm = { ...contact };\r\n      this.dialogVisible = true;\r\n    },\r\n    // 提交表单\r\n    submitForm() {\r\n      if (this.isEditing) {\r\n        this.updateContact();\r\n      } else {\r\n        this.addContact();\r\n      }\r\n    },\r\n    // 添加联系人\r\n    addContact() {\r\n      axios.post('/api/contacts', this.contactForm)\r\n        .then(response => {\r\n          this.contacts.push(response.data);\r\n          this.dialogVisible = false;\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    // 更新联系人\r\n    updateContact() {\r\n      axios.put(`/api/contacts/${this.contactForm.id}`, this.contactForm)\r\n        .then(() => {\r\n          const index = this.contacts.findIndex(c => c.id === this.contactForm.id);\r\n          this.$set(this.contacts, index, this.contactForm);\r\n          this.dialogVisible = false;\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    // 删除联系人\r\n    deleteContact(id) {\r\n      axios.delete(`/api/contacts/${id}`)\r\n        .then(() => {\r\n          this.contacts = this.contacts.filter(c => c.id !== id);\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-table {\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":";AAsCA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MAAA;MACAC,aAAA;MAAA;MACAC,WAAA;QAAA;QACAC,EAAA;QACAC,IAAA;QACAC,KAAA;MACA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACA;IACAD,cAAA;MACAV,KAAA,CAAAY,GAAA,kBACAC,IAAA,CAAAC,QAAA;QACA,KAAAZ,QAAA,GAAAY,QAAA,CAAAb,IAAA;MACA,GACAc,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;IACA;IACAE,cAAA;MACA,KAAAV,SAAA;MACA,KAAAJ,WAAA;QAAAC,EAAA;QAAAC,IAAA;QAAAC,KAAA;MAAA;MACA,KAAAJ,aAAA;IACA;IACA;IACAgB,YAAAC,OAAA;MACA,KAAAZ,SAAA;MACA,KAAAJ,WAAA;QAAA,GAAAgB;MAAA;MACA,KAAAjB,aAAA;IACA;IACA;IACAkB,WAAA;MACA,SAAAb,SAAA;QACA,KAAAc,aAAA;MACA;QACA,KAAAC,UAAA;MACA;IACA;IACA;IACAA,WAAA;MACAvB,KAAA,CAAAwB,IAAA,uBAAApB,WAAA,EACAS,IAAA,CAAAC,QAAA;QACA,KAAAZ,QAAA,CAAAuB,IAAA,CAAAX,QAAA,CAAAb,IAAA;QACA,KAAAE,aAAA;MACA,GACAY,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;IACA;IACAM,cAAA;MACAtB,KAAA,CAAA0B,GAAA,uBAAAtB,WAAA,CAAAC,EAAA,SAAAD,WAAA,EACAS,IAAA;QACA,MAAAc,KAAA,QAAAzB,QAAA,CAAA0B,SAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAxB,EAAA,UAAAD,WAAA,CAAAC,EAAA;QACA,KAAAyB,IAAA,MAAA5B,QAAA,EAAAyB,KAAA,OAAAvB,WAAA;QACA,KAAAD,aAAA;MACA,GACAY,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;IACA;IACAe,cAAA1B,EAAA;MACAL,KAAA,CAAAgC,MAAA,kBAAA3B,EAAA,IACAQ,IAAA;QACA,KAAAX,QAAA,QAAAA,QAAA,CAAA+B,MAAA,CAAAJ,CAAA,IAAAA,CAAA,CAAAxB,EAAA,KAAAA,EAAA;MACA,GACAU,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}